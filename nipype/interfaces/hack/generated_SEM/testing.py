# -*- coding: utf-8 -*-
"""Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator."""

from nipype.interfaces.base import (CommandLine, CommandLineInputSpec, SEMLikeCommandLine, TraitedSpec,
                    File, Directory, traits, isdefined, InputMultiPath, OutputMultiPath)
import os


class CLIROITestInputSpec(CommandLineInputSpec):
    ri = traits.List(argstr="--ri %s")
    ro = InputMultiPath(traits.List(traits.Float(), minlen=3, maxlen=3), argstr="--ro %s...")


class CLIROITestOutputSpec(TraitedSpec):
    pass


class CLIROITest(SEMLikeCommandLine):
    """title: CLI ROI Test

category: Testing

version: 1.0

"""

    input_spec = CLIROITestInputSpec
    output_spec = CLIROITestOutputSpec
    _cmd = " CLIROITest "
    _outputs_filenames = {}
    _redirect_x = False


class ComputeReflectiveCorrelationMetricInputSpec(CommandLineInputSpec):
    inputVolume = File(argstr="--inputVolume %s", desc="Input image.", exists=True)
    outputCSVFile = traits.Either(traits.Bool, File(), argstr="--outputCSVFile %s", desc="A file to write out final information report in CSV file: HA,BA,LR,MetricValue(cc)", hash_files=False)


class ComputeReflectiveCorrelationMetricOutputSpec(TraitedSpec):
    outputCSVFile = File(desc="A file to write out final information report in CSV file: HA,BA,LR,MetricValue(cc)", exists=True)


class ComputeReflectiveCorrelationMetric(SEMLikeCommandLine):
    """title: Compute RC metric values in exhausive search

category: Testing

version: 5.2.0

contributor: Ali Ghayoor

"""

    input_spec = ComputeReflectiveCorrelationMetricInputSpec
    output_spec = ComputeReflectiveCorrelationMetricOutputSpec
    _cmd = " ComputeReflectiveCorrelationMetric "
    _outputs_filenames = {'outputCSVFile':'outputCSVFile'}
    _redirect_x = False


class GenerateAverageLmkFileInputSpec(CommandLineInputSpec):
    inputLandmarkFiles = InputMultiPath(traits.Str, argstr="--inputLandmarkFiles %s", desc="Input landmark files names (.fcsv or .wts).", sep=",")
    inputLandmarkListFile = File(argstr="--inputLandmarkListFile %s", desc="A single file for a list of filenames one per line.", exists=True)
    outputLandmarkFile = traits.Either(traits.Bool, File(), argstr="--outputLandmarkFile %s", desc="Ouput landmark file name that includes average values for landmarks (.fcsv or .wts)", hash_files=False)


class GenerateAverageLmkFileOutputSpec(TraitedSpec):
    outputLandmarkFile = File(desc="Ouput landmark file name that includes average values for landmarks (.fcsv or .wts)", exists=True)


class GenerateAverageLmkFile(SEMLikeCommandLine):
    """title: Average Fiducials

category: Testing

description: This program gets several fcsv file each one contains several landmarks with the same name but slightly different coordinates. For EACH landmark we compute the average coordination.

version: 5.2.0

contributor: Ali Ghayoor

"""

    input_spec = GenerateAverageLmkFileInputSpec
    output_spec = GenerateAverageLmkFileOutputSpec
    _cmd = " GenerateAverageLmkFile "
    _outputs_filenames = {'outputLandmarkFile':'outputLandmarkFile'}
    _redirect_x = False


class LandmarksCompareInputSpec(CommandLineInputSpec):
    inputLandmarkFile1 = File(argstr="--inputLandmarkFile1 %s", desc="First input landmark file (.fcsv or .wts)", exists=True)
    inputLandmarkFile2 = InputMultiPath(traits.Str, argstr="--inputLandmarkFile2 %s", desc="Second input landmark file. This can be a vector of baseline file names (.fcsv or .wts)", sep=",")
    weights = File(argstr="--weights %s", desc="Weights on the tolerance to accept ( tolerance  / weights )", exists=True)
    tolerance = traits.Float(argstr="--tolerance %f", desc="The maximum error (in mm) allowed in each direction of a landmark")


class LandmarksCompareOutputSpec(TraitedSpec):
    pass


class LandmarksCompare(SEMLikeCommandLine):
    """title: Compare Fiducials

category: Testing

description: Compares two .fcsv or .wts text files and verifies that they are identicle.  Used for testing landmarks files.

version: 5.2.0

contributor: Ali Ghayoor

"""

    input_spec = LandmarksCompareInputSpec
    output_spec = LandmarksCompareOutputSpec
    _cmd = " LandmarksCompare "
    _outputs_filenames = {}
    _redirect_x = False
