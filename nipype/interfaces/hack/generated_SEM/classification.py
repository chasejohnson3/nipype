# -*- coding: utf-8 -*-
"""Autogenerated file - DO NOT EDIT
If you spot a bug, please report it on the mailing list and/or change the generator."""

from nipype.interfaces.base import (CommandLine, CommandLineInputSpec, SEMLikeCommandLine, TraitedSpec,
                    File, Directory, traits, isdefined, InputMultiPath, OutputMultiPath)
import os


class GeneratePurePlugMaskInputSpec(CommandLineInputSpec):
    inputImageModalities = InputMultiPath(File(exists=True), argstr="--inputImageModalities %s...", desc="Input image files names (.nii.gz or .nrrd)")
    threshold = traits.Float(argstr="--threshold %f", desc="threshold value to define class membership.")
    numberOfSubSamples = InputMultiPath(traits.Int, argstr="--numberOfSubSamples %s", desc="Number of continous index samples taken at each direction of lattice space for each plug volume.", sep=",")
    verbose = traits.Bool(argstr="--verbose ", desc="Print out some debugging information.")
    outputMaskFile = traits.Either(traits.Bool, File(), argstr="--outputMaskFile %s", desc="Ouput binary mask that includes the pure plugs (.nrrd)", hash_files=False)


class GeneratePurePlugMaskOutputSpec(TraitedSpec):
    outputMaskFile = File(desc="Ouput binary mask that includes the pure plugs (.nrrd)", exists=True)


class GeneratePurePlugMask(SEMLikeCommandLine):
    """title: Pure Plugs Mask

category: Classification

description: This program gets several modality image files and returns a binary mask that defines the pure plugs.

version: 5.2.0

contributor: Ali Ghayoor

"""

    input_spec = GeneratePurePlugMaskInputSpec
    output_spec = GeneratePurePlugMaskOutputSpec
    _cmd = " GeneratePurePlugMask "
    _outputs_filenames = {'outputMaskFile':'outputMaskFile.nii'}
    _redirect_x = False
